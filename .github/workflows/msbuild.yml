name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  Build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
  
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Pack Up
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run:
        Compress-Archive -DestinationPath "FontVideo_Bin.zip" -Path "FontVideo.exe", "LICENSE", "*.dll", "assets"
    - id: step_version
      run: echo "::set-output name=version::${{ steps.package_version.outputs.version }}"
    - id: step_upload_url
      run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"
      
    outputs:
      version: ${{ steps.step_version.outputs.version }}
      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}

  Make_GitHub_Release:
    name: Create Release
    runs-on: windows-latest
    needs: Build
    steps:
    - name: Create Release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.Make_GitHub_Release.outputs.upload_url }}
        asset_path: ./FontVideo_Bin.zip
        asset_name: FontVideo_Bin.zip
        asset_content_type: application/zip

      
